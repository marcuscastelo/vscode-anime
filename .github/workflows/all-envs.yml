name: Compile, Lint, and Tests (Extensive)

on:
  push:
    branches: [ develop ]
  pull_request:
    types: [ opened, synchronize, reopened, ready_for_review ]

jobs:
  compile:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        node-version: [10.x, 12.x, 14.x, 15.x]

    runs-on: ${{ matrix.os }}
    if: ${{ !github.event.pull_request.draft }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node modules
        id: cache-modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install remaining dependencies (if cache miss)
        if: steps.cache-modules.outputs.cache-hit != 'true'
        run: yarn install

      - name: Cache vscode
        id: cache-vscode
        uses: actions/cache@v2
        with:
          path: '**/.vscode-test'
          key: ${{ runner.os }}-vscode-${{ hashFiles('**/yarn.lock') }}

      - name: Mark vscode for download (if cache miss)
        if: steps.cache-vscode.outputs.cache-hit != 'true'
        run: rm -rf .vscode-test

      - name: Run tests
        uses: GabrielBB/xvfb-action@v1.0
        with:
          run: yarn run compile

  lint:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        node-version: [10.x, 12.x, 14.x, 15.x]

    runs-on: ${{ matrix.os }}
    if: ${{ !github.event.pull_request.draft }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node modules
        id: cache-modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install remaining dependencies (if cache miss)
        if: steps.cache-modules.outputs.cache-hit != 'true'
        run: yarn install

      - name: Cache vscode
        id: cache-vscode
        uses: actions/cache@v2
        with:
          path: '**/.vscode-test'
          key: ${{ runner.os }}-vscode-${{ hashFiles('**/yarn.lock') }}

      - name: Mark vscode for download (if cache miss)
        if: steps.cache-vscode.outputs.cache-hit != 'true'
        run: rm -rf .vscode-test

      - name: Run tests
        uses: GabrielBB/xvfb-action@v1.0
        with:
          run: yarn run lint

  tests:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        node-version: [10.x, 12.x, 14.x, 15.x]

    runs-on: ${{ matrix.os }}
    if: ${{ !github.event.pull_request.draft }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node modules
        id: cache-modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install remaining dependencies (if cache miss)
        if: steps.cache-modules.outputs.cache-hit != 'true'
        run: yarn install

      - name: Cache vscode
        id: cache-vscode
        uses: actions/cache@v2
        with:
          path: '**/.vscode-test'
          key: ${{ runner.os }}-vscode-${{ hashFiles('**/yarn.lock') }}

      - name: Mark vscode for download (if cache miss)
        if: steps.cache-vscode.outputs.cache-hit != 'true'
        run: rm -rf .vscode-test

      - name: Compile
        run: yarn run compile

      - name: Run tests
        uses: GabrielBB/xvfb-action@v1.0
        with:
          run: yarn run test